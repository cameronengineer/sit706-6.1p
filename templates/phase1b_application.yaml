AWSTemplateFormatVersion: 2010-09-09
Description: Autoscaling Wordpress

Parameters:
  NetworkStackName:
    Type: String
    Description: "Name the network stack"

  ApplicationStackName:
    Type: String
    Description: "Name the application stack"

  WordPressAMIID:
    Type: String
    Description: "Image ARN for the snapshot created after S3 intergration"
    # Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 # Temp for testing

  ServerInstanceProfile:
    Type: String
    Default: myS3Role

Resources:

##
## 7 Define a scaling policy for your auto-scaling group
##

  ##
  ## The Security Group which is used for the Autoscaling Wordpress is created in Phase1A 
  ## so it can be referenced by the RDS security group.
  ##

  WordpressLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref WordPressAMIID
      InstanceType: t2.micro
      KeyName: 
        Fn::ImportValue: !Sub "${ApplicationStackName}-WordpressServerKeyPair"
      SecurityGroups:
        - Fn::ImportValue: !Sub "${ApplicationStackName}-AutoScaleWordpressServerSecurityGroup"
      IamInstanceProfile: !Ref ServerInstanceProfile

  WordpressScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref WordpressLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet1ExportId"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet2ExportId"
      Tags:
        - Key: Name
          Value: WordpressAutoscaleServer
          PropagateAtLaunch: true
      TargetGroupARNs:
        - Fn::ImportValue: !Sub "${ApplicationStackName}-ALBTargetGroup"

  WordpressScalingPolicyUp:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WordpressScalingGroup
      ScalingAdjustment: '1'

  WordpressScalingPolicyDown:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WordpressScalingGroup
      ScalingAdjustment: '-1'

  CPUUtilizationAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 70
      AlarmDescription: "Scale with high CPU"
      Period: 180
      AlarmActions:
        - !Ref WordpressScalingPolicyUp
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WordpressScalingGroup
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization

  CPUUtilizationAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: 25
      AlarmDescription: "Scale when low CPU"
      Period: 180
      AlarmActions:
        - !Ref WordpressScalingPolicyDown
      Namespace: AWS/EC2
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref WordpressScalingGroup
      ComparisonOperator: LessThanThreshold      
      MetricName: CPUUtilization



